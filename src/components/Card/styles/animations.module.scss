// ==================== Animation Variables ====================
:global {
  :root {
    // Duration variables
    --spfx-anim-duration-fast: 150ms;
    --spfx-anim-duration-normal: 300ms;
    --spfx-anim-duration-slow: 500ms;
    --spfx-anim-duration-slower: 800ms;

    // Easing variables
    --spfx-anim-ease-out: cubic-bezier(0.4, 0, 0.2, 1);
    --spfx-anim-ease-in: cubic-bezier(0.4, 0, 1, 1);
    --spfx-anim-ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --spfx-anim-ease-spring: cubic-bezier(0.34, 1.56, 0.64, 1);
    --spfx-anim-ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);

    // Animation states
    --spfx-anim-play-state: running;
  }

  // ==================== Core Card Animations ====================

  // Card entrance animations
  @keyframes cardFadeIn {
    from {
      opacity: 0;
      transform: translateY(20px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes cardSlideInLeft {
    from {
      opacity: 0;
      transform: translateX(-100px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes cardSlideInRight {
    from {
      opacity: 0;
      transform: translateX(100px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes cardSlideInUp {
    from {
      opacity: 0;
      transform: translateY(100px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes cardSlideInDown {
    from {
      opacity: 0;
      transform: translateY(-100px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes cardScaleIn {
    from {
      opacity: 0;
      transform: scale(0.8);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes cardRotateIn {
    from {
      opacity: 0;
      transform: rotate(-10deg) scale(0.9);
    }
    to {
      opacity: 1;
      transform: rotate(0deg) scale(1);
    }
  }

  // Card exit animations
  @keyframes cardFadeOut {
    from {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
    to {
      opacity: 0;
      transform: translateY(-20px) scale(0.95);
    }
  }

  @keyframes cardSlideOutLeft {
    from {
      opacity: 1;
      transform: translateX(0);
    }
    to {
      opacity: 0;
      transform: translateX(-100px);
    }
  }

  @keyframes cardSlideOutRight {
    from {
      opacity: 1;
      transform: translateX(0);
    }
    to {
      opacity: 0;
      transform: translateX(100px);
    }
  }

  @keyframes cardScaleOut {
    from {
      opacity: 1;
      transform: scale(1);
    }
    to {
      opacity: 0;
      transform: scale(0.8);
    }
  }

  // ==================== Content Expand/Collapse Animations ====================

  // Smooth expand with scale and opacity
  @keyframes contentExpand {
    from {
      max-height: 0;
      opacity: 0;
      transform: scaleY(0.8);
      padding-top: 0;
      padding-bottom: 0;
    }
    to {
      max-height: 1000px;
      opacity: 1;
      transform: scaleY(1);
      padding-top: var(--original-padding-top, 16px);
      padding-bottom: var(--original-padding-bottom, 16px);
    }
  }

  @keyframes contentCollapse {
    from {
      max-height: 1000px;
      opacity: 1;
      transform: scaleY(1);
      padding-top: var(--original-padding-top, 16px);
      padding-bottom: var(--original-padding-bottom, 16px);
    }
    to {
      max-height: 0;
      opacity: 0;
      transform: scaleY(0.8);
      padding-top: 0;
      padding-bottom: 0;
    }
  }

  // Alternative slide expand/collapse
  @keyframes contentSlideExpand {
    from {
      max-height: 0;
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      max-height: 1000px;
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes contentSlideCollapse {
    from {
      max-height: 1000px;
      opacity: 1;
      transform: translateY(0);
    }
    to {
      max-height: 0;
      opacity: 0;
      transform: translateY(-10px);
    }
  }

  // Accordion-style expand/collapse
  @keyframes accordionExpand {
    from {
      max-height: 0;
      opacity: 0;
      transform: scaleY(0.95);
    }
    to {
      max-height: 2000px;
      opacity: 1;
      transform: scaleY(1);
    }
  }

  @keyframes accordionCollapse {
    from {
      max-height: 2000px;
      opacity: 1;
      transform: scaleY(1);
    }
    to {
      max-height: 0;
      opacity: 0;
      transform: scaleY(0.95);
    }
  }

  // ==================== Maximize/Restore Animations ====================

  @keyframes cardMaximize {
    from {
      transform: scale(1);
      border-radius: var(--spfx-card-border-radius);
      box-shadow: 0 2px 4px var(--spfx-card-shadow-color);
    }
    to {
      transform: scale(1);
      border-radius: 0;
      box-shadow: 0 25.6px 57.6px rgba(0, 0, 0, 0.22), 0 4.8px 14.4px rgba(0, 0, 0, 0.18);
    }
  }

  @keyframes cardRestore {
    from {
      transform: scale(1);
      border-radius: 0;
      box-shadow: 0 25.6px 57.6px rgba(0, 0, 0, 0.22), 0 4.8px 14.4px rgba(0, 0, 0, 0.18);
    }
    to {
      transform: scale(1);
      border-radius: var(--spfx-card-border-radius);
      box-shadow: 0 2px 4px var(--spfx-card-shadow-color);
    }
  }

  @keyframes maximizeBackdropFadeIn {
    from {
      opacity: 0;
      backdrop-filter: blur(0px);
    }
    to {
      opacity: 1;
      backdrop-filter: blur(4px);
    }
  }

  @keyframes maximizeBackdropFadeOut {
    from {
      opacity: 1;
      backdrop-filter: blur(4px);
    }
    to {
      opacity: 0;
      backdrop-filter: blur(0px);
    }
  }

  @keyframes maximizedContentSlideIn {
    from {
      opacity: 0;
      transform: scale(0.9) translateY(20px);
    }
    to {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }

  @keyframes maximizedContentSlideOut {
    from {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
    to {
      opacity: 0;
      transform: scale(0.9) translateY(20px);
    }
  }

  // ==================== Loading Animations ====================

  // Shimmer effect for skeleton loading
  @keyframes shimmer {
    0% {
      background-position: -1000px 0;
    }
    100% {
      background-position: 1000px 0;
    }
  }

  // Enhanced shimmer with wave effect
  @keyframes shimmerWave {
    0% {
      background-position: -200% 0;
      opacity: 0.4;
    }
    50% {
      opacity: 0.8;
    }
    100% {
      background-position: 200% 0;
      opacity: 0.4;
    }
  }

  // Loading bar animation
  @keyframes loadingBar {
    0% {
      transform: translateX(-100%);
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      transform: translateX(100%);
      opacity: 0;
    }
  }

  // Spinning loader
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  // Pulsing loader
  @keyframes pulse {
    0%,
    100% {
      opacity: 0.4;
      transform: scale(0.95);
    }
    50% {
      opacity: 1;
      transform: scale(1);
    }
  }

  // Bouncing dots
  @keyframes loadingDots {
    0%,
    80%,
    100% {
      transform: scale(0.8);
      opacity: 0.5;
    }
    40% {
      transform: scale(1.2);
      opacity: 1;
    }
  }

  // Progress bar indeterminate
  @keyframes progressIndeterminate {
    0% {
      left: -35%;
      right: 100%;
    }
    60% {
      left: 100%;
      right: -90%;
    }
    100% {
      left: 100%;
      right: -90%;
    }
  }

  // ==================== Highlight and Interaction Animations ====================

  // Card highlight effect
  @keyframes cardHighlight {
    0% {
      box-shadow: 0 0 0 0 rgba(0, 120, 212, 0.5);
      border-color: var(--spfx-card-neutral-light);
    }
    50% {
      box-shadow: 0 0 0 4px rgba(0, 120, 212, 0.3);
      border-color: var(--spfx-card-theme-primary);
      transform: scale(1.01);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(0, 120, 212, 0);
      border-color: var(--spfx-card-neutral-light);
      transform: scale(1);
    }
  }

  // Enhanced highlight with glow
  @keyframes cardGlow {
    0%,
    100% {
      box-shadow: 0 2px 4px var(--spfx-card-shadow-color), 0 0 0 0 rgba(0, 120, 212, 0);
    }
    50% {
      box-shadow: 0 4px 8px var(--spfx-card-shadow-color), 0 0 0 4px rgba(0, 120, 212, 0.2);
    }
  }

  // Button hover animation
  @keyframes buttonHover {
    from {
      transform: translateY(0);
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }
    to {
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
    }
  }

  // Icon rotation (for expand/collapse)
  @keyframes iconRotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(180deg);
    }
  }

  // Subtle bounce effect
  @keyframes subtleBounce {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-2px);
    }
  }

  // ==================== Staggered Animations ====================

  // Staggered card entrance
  @keyframes staggeredFadeIn {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  // Create stagger delays
  .spfx-card {
    &:nth-child(1) {
      animation-delay: 0ms;
    }
    &:nth-child(2) {
      animation-delay: 100ms;
    }
    &:nth-child(3) {
      animation-delay: 200ms;
    }
    &:nth-child(4) {
      animation-delay: 300ms;
    }
    &:nth-child(5) {
      animation-delay: 400ms;
    }
    &:nth-child(6) {
      animation-delay: 500ms;
    }
    &:nth-child(7) {
      animation-delay: 600ms;
    }
    &:nth-child(8) {
      animation-delay: 700ms;
    }
    &:nth-child(9) {
      animation-delay: 800ms;
    }
    &:nth-child(10) {
      animation-delay: 900ms;
    }
  }

  // ==================== Custom Animation Classes ====================

  // Animation utility classes
  .spfx-animate {
    &-fade-in {
      animation: cardFadeIn var(--spfx-anim-duration-normal) var(--spfx-anim-ease-out) forwards;
    }

    &-fade-out {
      animation: cardFadeOut var(--spfx-anim-duration-normal) var(--spfx-anim-ease-in) forwards;
    }

    &-slide-in-left {
      animation: cardSlideInLeft var(--spfx-anim-duration-normal) var(--spfx-anim-ease-out) forwards;
    }

    &-slide-in-right {
      animation: cardSlideInRight var(--spfx-anim-duration-normal) var(--spfx-anim-ease-out)
        forwards;
    }

    &-slide-in-up {
      animation: cardSlideInUp var(--spfx-anim-duration-normal) var(--spfx-anim-ease-out) forwards;
    }

    &-slide-in-down {
      animation: cardSlideInDown var(--spfx-anim-duration-normal) var(--spfx-anim-ease-out) forwards;
    }

    &-scale-in {
      animation: cardScaleIn var(--spfx-anim-duration-normal) var(--spfx-anim-ease-spring) forwards;
    }

    &-scale-out {
      animation: cardScaleOut var(--spfx-anim-duration-normal) var(--spfx-anim-ease-in) forwards;
    }

    &-rotate-in {
      animation: cardRotateIn var(--spfx-anim-duration-slow) var(--spfx-anim-ease-spring) forwards;
    }

    &-highlight {
      animation: cardHighlight var(--spfx-anim-duration-slower) var(--spfx-anim-ease-out);
    }

    &-glow {
      animation: cardGlow 2s var(--spfx-anim-ease-in-out) infinite;
    }

    &-pulse {
      animation: pulse 2s var(--spfx-anim-ease-in-out) infinite;
    }

    &-bounce {
      animation: subtleBounce 0.6s var(--spfx-anim-ease-out);
    }

    // Duration modifiers
    &-fast {
      animation-duration: var(--spfx-anim-duration-fast) !important;
    }

    &-slow {
      animation-duration: var(--spfx-anim-duration-slow) !important;
    }

    &-slower {
      animation-duration: var(--spfx-anim-duration-slower) !important;
    }

    // Easing modifiers
    &-ease-spring {
      animation-timing-function: var(--spfx-anim-ease-spring) !important;
    }

    &-ease-bounce {
      animation-timing-function: var(--spfx-anim-ease-bounce) !important;
    }

    // Animation state modifiers
    &-paused {
      animation-play-state: paused !important;
    }

    &-infinite {
      animation-iteration-count: infinite !important;
    }
  }

  // ==================== Hover Animations ====================
  .spfx-card {
    &.hover-lift:hover {
      animation: buttonHover var(--spfx-anim-duration-fast) var(--spfx-anim-ease-out) forwards;
    }

    &.hover-glow:hover {
      animation: cardGlow 0.6s var(--spfx-anim-ease-out);
    }

    &.hover-bounce:hover {
      animation: subtleBounce 0.6s var(--spfx-anim-ease-out);
    }
  }

  // ==================== Responsive Animation Control ====================

  // Reduce motion on smaller screens for performance
  @media (max-width: 768px) {
    .spfx-card {
      &.spfx-animate-fade-in,
      &.spfx-animate-slide-in-left,
      &.spfx-animate-slide-in-right,
      &.spfx-animate-slide-in-up,
      &.spfx-animate-slide-in-down {
        animation-duration: var(--spfx-anim-duration-fast);
      }
    }

    // Disable complex animations on very small screens
    @media (max-width: 480px) {
      .spfx-animate-rotate-in,
      .spfx-animate-glow,
      .hover-glow {
        animation: none !important;
      }
    }
  }

  // ==================== Accessibility: Reduced Motion ====================
  @media (prefers-reduced-motion: reduce) {
    // Disable all animations for users who prefer reduced motion
    .spfx-card,
    .spfx-card *,
    .spfx-accordion,
    .spfx-accordion * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }

    // Completely disable decorative animations
    .spfx-animate-glow,
    .spfx-animate-pulse,
    .hover-glow,
    .hover-bounce {
      animation: none !important;
    }

    // Keep essential state changes but make them instant
    .spfx-card-content {
      &.expanded,
      &.collapsed {
        transition: opacity 0.01ms !important;
        animation: none !important;
      }
    }

    .spfx-card-expand-icon {
      transition: transform 0.01ms !important;
    }
  }

  // ==================== Print: Disable All Animations ====================
  @media print {
    * {
      animation: none !important;
      transition: none !important;
      transform: none !important;
    }

    .spfx-card {
      box-shadow: none !important;
      border: 1px solid #000 !important;
    }
  }
  // ==================== High Contrast: Simplify Animations ====================
  @media (forced-colors: active) {
    // Simplify animations for high contrast mode
    .spfx-card {
      &.spfx-animate-highlight {
        animation: none !important;
        border: 2px solid Highlight !important;
      }

      &.spfx-animate-glow {
        animation: none !important;
        // outline: 2px solid Highlight !important;
        outline: none;
      }
    }

    // Remove complex visual effects - redefine individual keyframes
    @keyframes cardHighlight {
      from,
      to {
        border-color: Highlight;
        outline: 1px solid Highlight;
      }
    }

    @keyframes cardGlow {
      from,
      to {
        border-color: Highlight;
        outline: 1px solid Highlight;
      }
    }

    @keyframes shimmer {
      from,
      to {
        border-color: Highlight;
        outline: 1px solid Highlight;
      }
    }

    @keyframes shimmerWave {
      from,
      to {
        border-color: Highlight;
        outline: 1px solid Highlight;
      }
    }
  }
  // ==================== Performance Optimizations ====================

  // Use will-change for elements that will be animated
  .spfx-card {
    &.will-animate {
      will-change: transform, opacity, box-shadow;
    }

    &.will-animate-content {
      .spfx-card-content {
        will-change: max-height, opacity, transform;
      }
    }

    &.will-animate-maximize {
      will-change: transform, border-radius, box-shadow;
    }
  }

  // Remove will-change after animation completes
  .spfx-card {
    &.animation-complete {
      will-change: auto;

      .spfx-card-content {
        will-change: auto;
      }
    }
  }

  // Use transform3d for hardware acceleration
  @keyframes cardFadeInHW {
    from {
      opacity: 0;
      transform: translate3d(0, 20px, 0) scale3d(0.95, 0.95, 1);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
    }
  }

  @keyframes cardSlideInLeftHW {
    from {
      opacity: 0;
      transform: translate3d(-100px, 0, 0);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }

  // ==================== Theme-based Animation Variations ====================

  // Success theme animations
  .spfx-card-success {
    &.spfx-animate-highlight {
      animation: cardSuccessHighlight 0.8s var(--spfx-anim-ease-out);
    }
  }

  @keyframes cardSuccessHighlight {
    0% {
      box-shadow: 0 0 0 0 rgba(16, 124, 16, 0.5);
      border-color: var(--spfx-card-success);
    }
    50% {
      box-shadow: 0 0 0 4px rgba(16, 124, 16, 0.3);
      transform: scale(1.01);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(16, 124, 16, 0);
      transform: scale(1);
    }
  }

  // Error theme animations
  .spfx-card-error {
    &.spfx-animate-highlight {
      animation: cardErrorHighlight 0.8s var(--spfx-anim-ease-out);
    }

    &.spfx-animate-shake {
      animation: errorShake 0.5s var(--spfx-anim-ease-out);
    }
  }

  @keyframes cardErrorHighlight {
    0% {
      box-shadow: 0 0 0 0 rgba(209, 52, 56, 0.5);
      border-color: var(--spfx-card-error);
    }
    50% {
      box-shadow: 0 0 0 4px rgba(209, 52, 56, 0.3);
      transform: scale(1.01);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(209, 52, 56, 0);
      transform: scale(1);
    }
  }

  @keyframes errorShake {
    0%,
    100% {
      transform: translateX(0);
    }
    10%,
    30%,
    50%,
    70%,
    90% {
      transform: translateX(-2px);
    }
    20%,
    40%,
    60%,
    80% {
      transform: translateX(2px);
    }
  }

  // Warning theme animations
  .spfx-card-warning {
    &.spfx-animate-highlight {
      animation: cardWarningHighlight 0.8s var(--spfx-anim-ease-out);
    }

    &.spfx-animate-pulse {
      animation: warningPulse 2s var(--spfx-anim-ease-in-out) infinite;
    }
  }

  @keyframes cardWarningHighlight {
    0% {
      box-shadow: 0 0 0 0 rgba(255, 185, 0, 0.5);
      border-color: var(--spfx-card-warning);
    }
    50% {
      box-shadow: 0 0 0 4px rgba(255, 185, 0, 0.3);
      transform: scale(1.01);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(255, 185, 0, 0);
      transform: scale(1);
    }
  }

  @keyframes warningPulse {
    0%,
    100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.01);
    }
  }

  // Info theme animations
  .spfx-card-info {
    &.spfx-animate-highlight {
      animation: cardInfoHighlight 0.8s var(--spfx-anim-ease-out);
    }
  }

  @keyframes cardInfoHighlight {
    0% {
      box-shadow: 0 0 0 0 rgba(0, 120, 212, 0.5);
      border-color: var(--spfx-card-info);
    }
    50% {
      box-shadow: 0 0 0 4px rgba(0, 120, 212, 0.3);
      transform: scale(1.01);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(0, 120, 212, 0);
      transform: scale(1);
    }
  }

  // ==================== Advanced Animation Sequences ====================

  // Multi-step entrance animation
  @keyframes cardComplexEntrance {
    0% {
      opacity: 0;
      transform: translateY(50px) scale(0.8) rotate(-5deg);
      filter: blur(3px);
    }
    50% {
      opacity: 0.7;
      transform: translateY(10px) scale(0.95) rotate(0deg);
      filter: blur(1px);
    }
    80% {
      opacity: 1;
      transform: translateY(-5px) scale(1.02) rotate(0deg);
      filter: blur(0px);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1) rotate(0deg);
      filter: blur(0px);
    }
  }

  // Card flip animation
  @keyframes cardFlip {
    0% {
      transform: perspective(1000px) rotateY(0deg);
    }
    50% {
      transform: perspective(1000px) rotateY(90deg);
    }
    100% {
      transform: perspective(1000px) rotateY(0deg);
    }
  }

  // Typewriter effect for text content
  @keyframes typewriter {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }

  // Advanced loading spinner
  @keyframes advancedSpin {
    0% {
      transform: rotate(0deg) scale(1);
    }
    50% {
      transform: rotate(180deg) scale(1.1);
    }
    100% {
      transform: rotate(360deg) scale(1);
    }
  }

  // ==================== Utility Classes for Advanced Animations ====================

  .spfx-card {
    &.complex-entrance {
      animation: cardComplexEntrance 1s var(--spfx-anim-ease-spring) forwards;
    }

    &.flip-effect {
      animation: cardFlip 0.6s var(--spfx-anim-ease-out);
    }

    &.typewriter-text {
      .spfx-card-header-text {
        overflow: hidden;
        white-space: nowrap;
        border-right: 2px solid var(--spfx-card-theme-primary);
        animation: typewriter 2s steps(20) forwards;
      }
    }

    &.advanced-loading {
      .spfx-card-loading-spinner {
        animation: advancedSpin 1s linear infinite;
      }
    }
  }

  // ==================== Animation Event Handlers ====================

  // Classes to add/remove via JavaScript for animation control
  .spfx-animation-start {
    animation-play-state: running;
  }

  .spfx-animation-pause {
    animation-play-state: paused;
  }

  .spfx-animation-end {
    animation: none;
    transform: none;
    opacity: 1;
  }

  // ==================== Debug Animation Mode ====================

  // For development/debugging animations
  .spfx-debug-animations {
    * {
      animation-duration: 5s !important;
      transition-duration: 2s !important;
      outline: 1px dashed rgba(255, 0, 0, 0.3) !important;
    }

    *:hover {
      outline-color: rgba(0, 255, 0, 0.5) !important;
    }

    .spfx-card {
      position: relative;

      &::before {
        content: 'CARD: ' attr(data-card-id);
        position: absolute;
        top: -20px;
        left: 0;
        font-size: 10px;
        color: red;
        background: yellow;
        padding: 2px 4px;
        z-index: 1000;
      }
    }
  }
}
